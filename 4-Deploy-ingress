----------------------------------------------------------------------------------------------
Ingress
----------------------------------------------------------------------------------------------

/// A Kubernetes ingress controller is software that provides layer 7 load balancer features. These features include reverse proxy, configurable traffic routing, and TLS termination for Kubernetes services
/// Ingress allows load balancing, authentication, TSL/SSL, and URL-based routing configuration without the need for extra software outside of the cluster
/// there is many options to run kubernetes ingress on AKS, we deploy the NGINX ingress controller provided by "stable" repository 

/ create the nginx-ingress namespace  
kubectl create namespace ingress

/ add the "stable" repo 
helm repo add stable https://kubernetes-charts.storage.googleapis.com/

/ check the repo 
helm search repo stable
---> list all charts stable provide
/// in the following command we deploy the nginx-ingress using the nginx-ingress chart, set the replica count to 2 for redundancy
///  set the nodeselector to linux to schedue the ingress controller only on linux nodes
helm install nginx-ingress stable/nginx-ingress \
    --namespace ingress \
    --set controller.replicaCount=2 \
    --set controller.nodeSelector."beta\.kubernetes\.io/os"=linux \
    --set defaultBackend.nodeSelector."beta\.kubernetes\.io/os"=linux

/ check the nginx-ingress deployment
kubectl get service nginx-ingress-controller --namespace ingress 
---> notice here that the EXTERNAL IP is given a Public IP it means that the service type is set to "LoadBalancer" 

/ create the ingress in "ratingsapp" namespace 
kubectl apply --namespace ratingsapp -f ratings-web-ingress1.yml
---> in the 'rules' field we match the ingress controller with backend that is the frontend, thus, it will send http requests to the ratings-web 


---> the web app is now reachable via the browser through "http://frontend.13-68-177-68.nip.io" set your EXTERNAL IP address resulted in the last command 
